<!DOCTYPE html>
<html>

<head>
    <title>Leaflet GeoJSON Example</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.4.0/dist/leaflet.css"
        integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
        crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.4.0/dist/leaflet.js"
        integrity="sha512-QVftwZFqvtRNi0ZyCtsznlKSWOStnDORoefr1enyq5mVL4tmKB3S/EnC3rRJcxCPavG10IcrVGSmPh6Qw5lwrg=="
        crossorigin=""></script>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
    <script src="https://unpkg.com/leaflet.vectorgrid@1.2.0"></script>
    <script src="javascripts/animatedMarker.js"></script>
    <script src="javascripts/snake.js"></script>
    <style type="text/css">
        .leaflet-container {
            background-color: #c5e8ff;
        }

        #map {
            height: 100vh;
        }
    </style>
</head>

<body>
    <div id="map"></div>
    <script>
        var map = L.map('map');
        var openmaptilesUrl = "https://free-{s}.tilehosting.com/data/v3/{z}/{x}/{y}.pbf.pict?key={key}";
        var openmaptilesAttribution =
            '<a href="https://openmaptiles.org/">&copy; OpenMapTiles</a>, <a href="http://www.openstreetmap.org/copyright">&copy; OpenStreetMap</a> contributors';
        var openmaptilesKey = 'UmmATPUongHdDmIicgs7';


        var vectorTileOptions = {
            rendererFactory: L.canvas.tile,
            attribution: openmaptilesAttribution,
            key: openmaptilesKey,
            subdomains: '0123', // 01234 for openmaptiles, abcd for mapbox
            // maxNativeZoom: 14,
            vectorTileLayerStyles: {
                'poi': function (properties, zoom) {
                    return {
                        weight: 2,
                        color: 'red',
                        opacity: 1,
                        fillColor: 'yellow',
                        fill: true,
                        radius: 6,
                        fillOpacity: 0.7
                    }
                },

                'housenumber': function (properties, zoom) {
                    return {
                        weight: 2,
                        color: 'purple',
                        opacity: 1,
                        fillColor: 'green',
                        fill: true,
                        radius: 4,
                        fillOpacity: 0.3
                    }
                },

                park: [],
                place: [],
                water: [],
                waterway: [],
                boundary: [],
                country_label: [],
                marine_label: [],
                state_label: [],
                place_label: [],
                waterway_label: [],
                water_name: [],
                landcover: [],
                landuse: [],
                landuse_overlay: [],
                road: [],
                transportation: [],
                waterway: [],
                aeroway: [],
                tunnel: [],
                bridge: [],
                barrier_line: [],
                building: [],
                road_label: [],
                road_name: [],
                transportation_name: [],
                housenum_label: [],
                mountain_peak: [],
            },
            interactive: true, // Make sure that this VectorGrid fires mouse/pointer events
            getFeatureId: function (f) {
                return f.properties.osm_id;
            }
        };

        L.tileLayer('http://tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

        var highlight;
        var clearHighlight = function () {
            if (highlight) {
                pbfLayer.resetFeatureStyle(highlight);
            }
            highlight = null;
        };
        var pbfLayer = L.vectorGrid.protobuf(openmaptilesUrl, vectorTileOptions)
            .on('click', function (e) { // The .on method attaches an event handler
                L.popup()
                    .setContent(e.layer.properties.name || e.layer.properties.type)
                    // 					.setContent(JSON.stringify(e.layer))
                    .setLatLng(e.latlng)
                    .openOn(map);

                clearHighlight();
                highlight = e.layer.properties.osm_id;
                pbfLayer.setFeatureStyle(highlight, {
                    weight: 2,
                    color: 'red',
                    opacity: 1,
                    fillColor: 'red',
                    fill: true,
                    radius: 6,
                    fillOpacity: 1
                })

                L.DomEvent.stop(e);
            })
            .addTo(map);

        map.on('click', clearHighlight);

        map.setView([40.9994639, -74.163208], null);

        // var mymap = L.map('mapid').setView([51.505, -0.09], null);
        // var osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
        // var osmAttrib = 'Map data Â© <a href="https://openstreetmap.org">OpenStreetMap</a> contributors';
        // var osm = new L.TileLayer(osmUrl, {
        //     attribution: osmAttrib
        // }).addTo(map);
        // mymap.addLayer(osm);
        // // var marker = L.marker([51.5, -0.09]).addTo(mymap);
        // // create a red polyline from an array of LatLng points
        // var latlngs = [
        //     [51.505, -0.09],
        //     [51.705, -0.19],
        //     [51.715, -0.5]
        // ];
        // var polyline = L.polyline(latlngs, {
        //     color: 'red',
        //     weight: 10,
        //     opacity: 0.8
        // }).addTo(mymap);
        // // zoom the map to the polyline
        // mymap.fitBounds(polyline.getBounds());
        // polyline.on('snakeend',()=>{
        //     polyline.snakeIn();
        // });
        // polyline.snakeIn();



        // set the marker icon
        // var myIcon = L.icon({
        //     iconUrl: 'images/marker.jpeg'
        // });
        // // create a animated marker
        // var animatedMarker = L.animatedMarker(polyline.getLatLngs(), {
        //     interval: 20, // milliseconds,
        //     // autoStart: false,
        //     // icon: myIcon
        //     onEnd: () => {
        //         animatedMarker.reStart(polyline.getLatLngs());
        //     }
        // });
        // mymap.addLayer(animatedMarker);
    </script>
</body>

</html>